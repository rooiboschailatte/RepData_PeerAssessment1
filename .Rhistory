p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f,layout=c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"),local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"),local = TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color,diamonds$cut)
myedit("myLabels.R")
source(pathtofile("mylabels.R"),local = TRUE)
source(pathtofile("myLabels.R"),local = TRUE)
xyplot(price~carat|color*cut, data=diamonds,strip=FALSE,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
xyplot(price~carat|color*cut, data=diamonds,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
sample(colors(),10)
pal<-colorRamp(c("red","blue")
)
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1<-colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xcc
p2<-colorRampPalette(c("red","yellow"))
p2
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun
?rgb
p3<-colorRampPalette(c("blue","green"),alpha=0.5)
p3(5)
plot(x,y,pch=19,col=rgb(0,0.5,0.5))
plot(x,y,pch=19,col=rgb(0,0.5,0.5,0.4))
plot(x,y,pch=19,col=rgb(0,0.5,0.5,0.3))
cols<-brewer.pal(3,"BuGn")
showMe(cols
)
pal<-colorRampPalette(cols)
showMe(pal(20))
image(volcano,col=pal(20))
image(volcano,col=p1(20))
str(mpg)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg,color=drv)
qplot(displ,hwy,data=mpg,color=drv,geom=c("point","smooth"))
qplot(y=hwy,data=mpg,color=drv)
myhigh
qplot(drv,hwy,data=mpg,geom="boxplot")
qplot(drv,hwy,data=mpg,geom="boxplot",color=manufacturer)
qplot(hwy,data=mpg,fill=drv)
qplot(displ,hwy,data=mpg,facets=.~drv)
qplot(hwy,data=mpg,facets=drv~.,binwidth=2)
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets=.~drv)
g<-ggplot(mpg,aes=(displ,hwy)
g<-ggplot(mpg,aes(displ,hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point(size=4,alpha=1/2,aes(color=drv))
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement",y="Hwy Mileage")
g+geom_point(aes(color=drv),size=2,alpha=1/2)+geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g+geom_point(aes(color=drv))+theme_bw(base_family = "Times")
plot(myx,myy,type="l",ylim = C(-3,3))
plot(myx,myy)
plot(myx, myy, type = "l", ylim = c(-3,3))
g<-ggplot(testdat,aes(x=myx,y=myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g=ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g<-ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
str(diamonds)
qplot(price, data=diamonds)
range(diamonds$price)
qplot(price, data=diamonds,binwidth=18497/30)
brk
counts
qplot(price, data=diamonds,binwidth=18497/30,fill=cut)
qplot(price, data=diamonds, geom="dnsity")
qplot(price, data=diamonds, geom="density")
qplot(price, data=diamonds, geom="density", color=cut
)
qplot(carat,price, data=diamonds)
qplot(carat,price, data=diamonds,shape=cut)
qplot(carat,price, data=diamonds,color=cut)
qplot(carat,price, data=diamonds,color=cut,geom_smooth(method="lm"))
qplot(carat,price, data=diamonds,color=cut)+geom_smooth(method="lm")
qplot(carat,price, data=diamonds,color=cut,facets=>~cut)+geom_smooth(method="lm")
qplot(carat,price, data=diamonds,color=cut,facets=.~cut)+geom_smooth(method="lm")
g<-ggplot(diamonds,aes(depth,price))
summar(g)
summary(g)
g+geom_point(alpha=1/3)
cutpoints<-quantile(diamonds$carat,seq(0,1,lenth=4),na.rm=TRUE)
cutpoints<-quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints
diamonds$car2<-cut(diamonds$carat,cutpoints)
g<-ggplot(diamonds,aes(depth,price))
g+ggeom_point(alpha=1/3)+facet_grid(cut~car2)
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3,color="pink")
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
library(swirl)
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc)
)
abline(h=1.5,col="blue")
abline(h=0.4,col="red")
5
12
abline(h=0.05,col="green")
dist(dFsm)
hc
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min())
apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newcx,newcy,col=cols1,pch=8,cex=2,lwd=2)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust,mean)
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,centers=3)
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("myPatt.R",local=TRUE)
source("addPatt.R",local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu%*%diag%*%t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v[0,1:2]
svd2$v[,1:2]
svd2$d
dim(faceData)
a1<-svd1$u%*%t(svd1$v)*svd1$d[1]
a1<-svd1$u[,1]%*%t(svd1$v[,1])*svd1$d[1]
myImage(a1)
a2<-svd1$u[,1:2]%*%diag(svd1$d[1:2])%*%t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5]%*%diag(svd1$d[1:5])%*%t(svd1$v[,1:5]))
myImage(svd1$u[,1:10]%*%diag(svd1$d[1:10])%*%t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd,subject==1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist<-dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
mdist<-dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(c(sub1[,10:12],maxCon))
mdist <- dist(c(sub1[,10],sub1[,11],sub1[,12],maxCon))
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562,563)],6)
table(kClust$cluster,sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)],6,nstart=100)
table(kClust$cluster,sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12],pch=19,ylab="Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12],pch=19,ylab="Walkdown Cluster")
library(swirl)
swirl
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames,"|",fixed=TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
pm1 <- make.names(cnames[[1]][wcol])
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
bye()
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames,"|",fixed=TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1)
)
negative <- x1<0
sum(negative,na.rm=TRUE)
mean(negative,na.rm=TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates),"%Y%m%d")
head(dataes)
head(dates)
hist(dates(negative),"month")
hist(dates[negative],"month")
str(site0)
both <- intersect(site0,site1)
both
head(pm0)
cnt0 <- subset(pm0,State.Code == 36 && county.site %in% both)
cnt0 <- subset(pm0,State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1,State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0$sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm0sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow=c(1,2),mar=c(4,4,2,1))
plot(dates0,x0sub,pch=20)
abline(h=median(x0sub,na.rm=TRUE),lw=2)
abline(h=median(x0sub,na.rm=TRUE),lwd=2)
plot(dates1,x1sub,pch=20)
abline(h=median(x1sub,na.rm=TRUE),lwd=2)
rng <- range(x0sub,x1sub,na.rm=TRUE)
rng
mn0<- with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
mn1<- with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.fram(state=names(mn0),mean=mn0)
d0 <- data.fram(state=names(mn0),mean=mn0)
d0 <- data.frame(state=names(mn0),mean=mn0)
d1 <- data.frame(state=names(mn1),mean=mn1)
mrg <- merge(d0,d1,by="state")
dim(merge)
dim(mrg)
head(mrg)
with(mrg,plot(rep(1,52),mrg[,2],xlim=c(.5,2.5)))
with(mrg,points(rep(2,52),mrg[,3]))
segments(rep(1,52),mrg[,2],rep(2,52),mrg[,3])
mrg[mrg$mean.x < mrg$mean.y, ]
activity <- read.csv("activity.csv")
activity$date <- as.Date(activity$date)
setwd("ReproducibleResearch/RepData_PeerAssessment1")
activity <- read.csv("activity.csv")
activity$date <- as.Date(activity$date)
library(dplyr)
library(ggplot2)
dailysteps <- summarise(group_by(activity,date),total_steps=sum(steps,na.rm=TRUE))
hist(dailysteps$total_steps)
qplot(total_steps,data=dailysteps)
p <- ggplot(dailysteps,aes(total_steps))
p + geom_histogram() + theme_bw()
?geom_histogram
2355/60
dailypattern<-summarise(group_by(activity,interval),mean_steps=mean(steps,na.rm=TRUE))
View(dailypattern)
dailypattern$interval[dailypattern$mean_steps == max(dailypattern$mean_steps)]
max(dailypattern$mean_steps)
24*60
is.na(activity$interval)
sum(is.na(activity$interval))
sum(is.na(activity$date))
sum(is.na(activity$steps))
sum(is.na(activity))
dailypattern
dailypattern$mean_steps[1]
24*60
24*60/288
5*288
5*(16-1)
5*(2-1)
5*(3-1)
5*(4-1)
c(0:288)
5*c(0:288)
length(dailysteps)
length(dailysteps$date)
length(activity$date)
trail <- rep(5*c(0:288),61)
length(trail)
trial <- rep(5*c(0:287),61)
length(trial)
unique(activity$date)
unique(activity$interval)
length(unique(activity$date))
length(unique(activity$interval))
days <- length(unique(activity$date))
divisions <- length(unique(activity$interval))
time <- 5
activity$interval <- rep(time*c(0:divisions-1),days)
activity <- read.csv("activity.csv")
activity$date <- as.Date(activity$date)
days <- length(unique(activity$date))
divisions <- length(unique(activity$interval))
time <- 5
activity$interval <- rep(time*c(0:(divisions-1),days)
)
str(activity)
days
activity$interval <- rep(time*c(0:(divisions-1)),days)
View(activity)
divisions
?rem()
2%%228
2%%divisions
288%%divisions
288%%(divisions+1)
289%%(divisions+1)
dailypattern<-summarise(group_by(activity,interval),mean_steps=mean(steps,na.rm=TRUE))
7593%%(divisions+1)
7593%/%(divisions+1)
577%%divisions
576%%divisions
dailypattern$mean_steps[0]
dailypattern$mean_steps[1]
filledactivity <- activity
filledactivity$steps==NA
is.na(filledactivity$steps)
View(filledactivity)
for (i in 1:length(filledactivity)){
if (is.na(filledactivity$steps[i])){
j = i%%divisions
if (j==0){j <- divisions}
filledactivity$steps[i] <- dailypattern$mean_steps[j]
}
}
sum(is.na(filledactivity))
sum(is.na(activity))
filledactivity <- activity
for (i in 1:length(filledactivity)){
if (is.na(filledactivity$steps[i])){
j = i%%divisions
if (j==0){j <- divisions}
print(i,j)
filledactivity$steps[i] <- dailypattern$mean_steps[j]
}
}
length(filledactivity)
filledactivity <- activity
for (i in 1:length(filledactivity)){
if (is.na(filledactivity$steps[i])){
j = i%%divisions
if (j==0){j <- divisions}
print(i,j)
filledactivity$steps[i] <- dailypattern$mean_steps[j]
}
}
filledactivity <- activity
for (i in 1:length(filledactivity$steps)){
if (is.na(filledactivity$steps[i])){
j = i%%divisions
if (j==0){j <- divisions}
print(i,j)
filledactivity$steps[i] <- dailypattern$mean_steps[j]
}
}
filledactivity <- activity
for (i in 1:length(filledactivity$steps)){
if (is.na(filledactivity$steps[i])){
j = i%%divisions
if (j==0){j <- divisions}
print(i),print(j)
filledactivity$steps[i] <- dailypattern$mean_steps[j]
}
}
filledactivity <- activity
for (i in 1:length(filledactivity$steps)){
if (is.na(filledactivity$steps[i])){
j = i%%divisions
if (j==0){j <- divisions}
filledactivity$steps[i] <- dailypattern$mean_steps[j]
}
}
View(filledactivity)
sum(is.na(filledactivity))
dayrec <- Weekdays(filledactivity$date)
?weekdays()
dayrec <- weekdays(filledactivity$date)
dayrec
?mutate()
as.factor((dayrec=="Saturday"|dayrec=="Sunday"),levels=c("weekend","weekday"))
(dayrec == "Saturday" | dayrec == "Sunday")
?as.factor()
as.factor((dayrec=="Saturday"|dayrec=="Sunday"))
as.factor((dayrec=="Saturday"|dayrec=="Sunday"),labels=c("weekend","weekday"))
as.factor((dayrec=="Saturday"|dayrec=="Sunday"),labels=("weekend","weekday"))
factor((dayrec=="Saturday"|dayrec=="Sunday"),levels=c("weekday","weekend"))
as.factor((dayrec=="Saturday"|dayrec=="Sunday"),levels=c("FALSE","TRUE"),labels=c("weekday","weekend"))
fact <- as.factor((dayrec=="Saturday"|dayrec=="Sunday"),levels=c("FALSE","TRUE"),labels=c("weekday","weekend"))
fact
fact <- as.factor((dayrec=="Saturday"|dayrec=="Sunday")
)
fact
(dayrec=="Saturday"|dayrec=="Sunday")
head(dayrec=="Saturday"|dayrec=="Sunday")
tail(dayrec=="Saturday"|dayrec=="Sunday")
dayrec
tail(dayrec)
str(dayrec)
dayfact <- factor(dayrec)
str(dayfact)
dayfact <- factor((dayrec=="Saturday"|dayrec=="Sunday"))
str(dayfact)
dayfact <- factor((dayrec=="Saturday"|dayrec=="Sunday"),levels=c("weekday","weekend"))
str(dayfact)
dayfact <- factor((dayrec=="Saturday"|dayrec=="Sunday"),labels=c("weekday","weekend"))
str(dayfact)
view(dayfact)
View(dayfact)
dayrec[200],dayfact[200]
dayrec[200]
dayfact[200]
dayrec[300]
dayrec[100]
dayrec[10]
dayrec[0]
dayrec[1]
dayrec[1000]
dayrec[2000]
dayfact[2000]
filledactivity$day <- factor((dayrec=="Saturday"|dayrec=="Sunday"),labels=c("weekday","weekend"))
View(filledactivity)
weekpattern<-summarise(group_by(activity,interval,day),mean_steps=mean(steps))
filledactivity <- activity
for (i in 1:length(filledactivity$steps)){
if (is.na(filledactivity$steps[i])){
j = i%%divisions
if (j==0){j <- divisions}
filledactivity$steps[i] <- dailypattern$mean_steps[j]
}
}
dayrec <- weekdays(filledactivity$date)
filledactivity$day <- factor((dayrec=="Saturday"|dayrec=="Sunday"),labels=c("weekday","weekend"))
weekpattern<-summarise(group_by(filledactivity,interval,day),mean_steps=mean(steps))
View(weekpattern)
